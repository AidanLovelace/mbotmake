#!/usr/bin/env python3

import zipfile
import json
import sys
import re
import tempfile


def generateMetajson(filename, temp):
    return


def createToolpath(filename, temp):
    corpus = open(filename).readlines()
    processed = []
    progresslen = len(corpus)
    linenum = 0
    printline = '{0:>' + str(len(str(progresslen))) + '}/{1} {2:>3.0f}%'
    axis = \
        {
            'a': 0.0,
            'feedrate': 0.0,
            'x': 0.0,
            'y': 0.0,
            'z': 0.0
        }
    tempmetadata = \
        {
            'index': 0,
            'temperature': 0
        }
    print('lines processed:')
    print(printline.format(0, progresslen, 0/progresslen), end='')
    """
    Quick reference:
    G0/G1 is move
    M104 is set_toolhead_temperature
    M140 sets bed temp (TODO: find makerbot equiv command) 
    M106 is fan_duty (sets fan)
    M107 is toggle_fan (off)
    G90 toggles absolute positioning
    G91 toggles relative positioning
    """
    for line in corpus:
        if line.find(';') > 0:
            line = line[:line.find(';')]
        line = [part for part in line.split(' ') if part != '']
        if line[0] in ['G0', 'G1']:
            if len(line) == 2: # Most likely to set feedrate
                axis['feedrate'] = float(line[1][1:])
            else: # Normal move
                for ax in line[1:]:
                    if ax[0] == 'E':
                        axis['a'] = float(ax[1:])
                    elif ax[0] == 'X':
                        axis['x'] = float(ax[1:])
                    elif ax[0] == 'Y':
                        axis['y'] = float(ax[1:])
                    elif ax[0] == 'Z':
                        axis['z'] = float(ax[1:])
                    elif ax[0] == 'F':
                        axis['feedrate'] = float(ax[1:])
                processed += \
                    {'command': {
                        'function': 'move',
                        'metadata': {
                            'relative': {
                                'a': False,
                                'x': False,
                                'y': False,
                                'z': False
                            }
                        },
                        'parameters': axis,
                        'tags': []
                        }
                    }
        elif line[0] == 'M104':
            for ax in line:
                if ax[0] == 'T':
                    tempmetadata['index'] = int(ax[1:])
                elif ax[0] == 'S':
                    tempmetadata['temperature'] = int(ax[1:])
            processed += \
                {'command': {
                    'function': 'set_toolhead_temperature',
                    'metadata': {},
                    'parameters': tempmetadata,
                    'tags':[]
                    }
                }
        print(''.join(['\b'] * len(printline.format(linenum, progresslen, linenum/progresslen))), end='')
        linenum += 1
        print(printline.format(linenum, progresslen, linenum/progresslen), end='')
        
    return


def genDummyImages(temp):
    return


def packageMBotFile(filename, temp):
    return


def main(argv):
    for gcode in argv[1:]:
        temp = tempfile.mkdtemp()
        output = gcode.replace('.gcode', '.makerbot')
        print('Generating metadata for', output)
        generateMetajson(gcode, temp)
        print('Generating toolpath for', output)
        createToolpath(gcode, temp)
        print('Putting dummy images in', output)
        genDummyImages(temp)
        print('Packaging', output)
        packageMBotFile(gcode, temp)
        print(output, 'done!')


if __name__ == '__main__':
    if len(sys.argv) < 2:
        print(
"""Instructions:
Drag and drop your generated gcode
    file onto this executable.
It will then output a makerbot file in
    the dir that the original
    gcode is placed in.
Press enter to continue."""
        )
        input()
        sys.exit()
    main(sys.argv)
